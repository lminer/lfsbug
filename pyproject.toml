[tool.poetry]
name = "lfsbug"
version = "0.1.0"
description = ""
authors = [
]

[tool.poetry.dependencies]
importlib-resources = "^5.8"
numpy = "^1.19.5"
python = "^3.9"
zstandard = "^0.18.0"


[tool.poetry.dev-dependencies]
black = "^23.10.0"
isort = "^5.10.1"
pre-commit = "^2.17.0"
pytest = "^7.1.2"
shortuuid = ">=1.0.9"
mypy = "^1.6.0"
coverage = "^6.4.1"


[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
force_sort_within_sections = true
use_parentheses = true
line_length = 120
profile = "black"
known_third_party = [
    "numpy",
    "pandas"
]
known_local_folder = [
    "datashake",
]


[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | \.idea
    | \.vscode
    | scripts
    | notebooks
    | \.eggs
  )/
)
'''


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.9
target-version = "py39"


[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = ["D100", "D104", "D203", "D405"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(message)s"
